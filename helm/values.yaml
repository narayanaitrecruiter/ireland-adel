replicas:
  zookeeper: 3
  kafka: 3
  connect: 1
  ksqldb: 1
  controlcenter: 1
  schemaregistry: 1
  kafkarestproxy: 1

images:
  zookeeper: artifactory/dev_core/cp-zookeeper:7.6.0
  kafka: artifactory.ws.com/dev_core/confluentinc/cp-server:7.6.0
  connect: artifactory.wscom/dev_core/cp-server-connect:7.6.0
  ksqldb: artifactory.wscom/dev_core/cp-ksqldb-server:7.6.0
  controlcenter: artifactory.ws.com/dev_core/cp-enterprise-control-center:7.6.0
  schemaregistry: artifactory.ws.com/dev_core/cp-schema-registry:7.6.0
  kafkarestproxy: artifactory.ws.com/dev_core/cp-kafka-rest:7.6.0
  init: artifactory.ws.vici.com/dev_core/confluent-init-container:2.8.0

resources:
  zookeeper:
    requests:
      cpu: 500m
      memory: 8Gi
    limits:
      cpu: 500m
      memory: 8Gi
  kafka:
    requests:
      cpu: 4
      memory: 8Gi
    limits:
      cpu: 4
      memory: 8Gi
  connect:
    requests:
      cpu: 2
      memory: 4Gi
    limits:
      cpu: 2
      memory: 4Gi
  ksqldb:
    requests:
      cpu: 2
      memory: 4Gi
    limits:
      cpu: 2
      memory: 4Gi
  controlcenter:
    requests:
      cpu: 2
      memory: 4Gi
    limits:
      cpu: 2
      memory: 4Gi
  schemaregistry:
    requests:
      cpu: 2
      memory: 4Gi
    limits:
      cpu: 2
      memory: 4Gi
  kafkarestproxy:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 1
      memory: 2Gi
  kafkarestclass:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 1
      memory: 2Gi

volumes:
  zookeeper:
    data: 100Gi
    log: 10Gi
  kafka:
    data: 200Gi
    log: 20Gi
  ksqldb:
    data: 10Gi
  controlcenter:
    data: 10Gi

probes:
  liveness:
    periodSeconds: 10
    failureThreshold: 5
    timeoutSeconds: 500

configOverrides:
  kafka:
    server:
      - "confluent.license.topic.replication.factor=2"
      - "confluent.metrics.reporter.topic.replicas=2"
      - "confluent.tier.metadata.replication.factor=2"
      - "confluent.metadata.topic.replication.factor=2"
      - "confluent.balancer.topic.replication.factor=2"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=2"
      - "event.logger.exporter.kafka.topic.replicas=2"
      - "offsets.topic.replication.factor=2"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
  connect:
    server:
      - "config.storage.replication.factor=1"
      - "offset.storage.replication.factor=1"
      - "status.storage.replication.factor=1"
  controlcenter:
    server:
      - "confluent.controlcenter.command.topic.replication=1"
      - "confluent.controlcenter.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.metrics.topic.replication=1"
      - "confluent.monitoring.interceptor.topic.replication=1"
      - "confluent.controlcenter.internal.topics.replication=1"

dependencies:
  controlcenter:
    schemaRegistry: "http://schemaregistry.confluent.svc.cluster.local:8081"
    ksqldb:
      - name: ksql-dev
        url: "http://ksqldb.confluent.svc.cluster.local:8088"
    connect:
      - name: connect-dev
        url: "http://connect.confluent.svc.cluster.local:8083"
  kafkarestproxy:
    schemaRegistry: "http://schemaregistry.confluent.svc.cluster.local:8081"
  ksqldb:
    schemaRegistry: "http://schemaregistry.svc.cluster.local:8081"
  kafkarestclass:
    kafkaClusterRef: "kafka"
    kafkaRestEndpoint: "http://kafka.confluent.svc.cluster.local:8090"
