apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: ns1
spec:
  replicas: 3
  image:
    application: artifactory/dev_core/cp-zookeeper:7.6.0
    init: artifactory.ws.vici.com/dev_core/confluent-init-container:2.8.0
  dataVolumeCapacity: 100Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 500m 
        memory: 8Gi
      limits:
        cpu: 500m
        memory: 8Gi


  accessModes:
    - ReadWriteOnce




---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: ns1
spec:
  replicas: 3
  image:
    application: artifactory.ws.com/dev_core/confluentinc/cp-server:7.6.0
    init: artifactory.ws.com/dev_core/confluent-init-container:2.8.0
  dataVolumeCapacity: 200Gi
  logVolumeCapacity: 20Gi
  configOverrides:
    server:
      - "confluent.license.topic.replication.factor=2"
      - "confluent.metrics.reporter.topic.replicas=2"
      - "confluent.tier.metadata.replication.factor=2"
      - "confluent.metadata.topic.replication.factor=2"
      - "confluent.balancer.topic.replication.factor=2"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=2"
      - "event.logger.exporter.kafka.topic.replicas=2"
      - "offsets.topic.replication.factor=2"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
  podTemplate:
    resources:
      requests:
        cpu: 4
        memory: 8Gi
      limits:
        cpu: 4
        memory: 8Gi
  metricReporter:
    enabled: true

---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: ns1
spec:
  replicas: 1
  image:
    application: artifactory.wscom/dev_core/cp-server-connect:7.6.0
    init: artifactory.ws.com/dev_core/confluent-init-container:2.8.0
  configOverrides:
    server:
      - config.storage.replication.factor=1
      - offset.storage.replication.factor=1
      - status.storage.replication.factor=1
  podTemplate:
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 2
        memory: 4Gi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500

---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: ns1
spec:
  replicas: 1
  image:
    application: artifactory.wscom/dev_core/cp-ksqldb-server:7.6.0
    init: artifactory.ws..com/dev_core/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  internalTopicReplicationFactor: 1
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.svc.cluster.local:8081
  podTemplate:
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 2
        memory: 4Gi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500

---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: ns1
spec:
  replicas: 1
  image:
    application: artifactory.ws.com/dev_core/cp-enterprise-control-center:7.6.0
    init: artifactory.ws.com/dev_core/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  podTemplate:
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 2
        memory: 4Gi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksql-dev
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect-dev
      url:  http://connect.confluent.svc.cluster.local:8083

---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: ns1
spec:
  replicas: 1
  image:
    application: artifactory.ws.com/dev_core/cp-schema-registry:7.6.0
    init: artifactory.ws.com/dev_core/confluent-init-container:2.8.0
  podTemplate:
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 2
        memory: 4Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: ns1
spec:
  replicas: 1
  image:
    application: artifactory.ws.com/dev_core/cp-kafka-rest:7.6.0
    init: artifactory.ws.com/dev_core/confluent-init-container:2.8.0
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
  podTemplate:
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 1
        memory: 2Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: krc-cfk
  namespace: ns1
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: http://kafka.confluent.svc.cluster.local:8090
  podTemplate:
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 1
        memory: 2Gi
